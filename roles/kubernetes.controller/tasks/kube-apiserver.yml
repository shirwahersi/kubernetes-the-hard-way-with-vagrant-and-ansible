---
- name: Create Kubernetes config directory
  file:
    path: "{{kube_conf_dir}}"
    state: directory
    mode: 0700
    owner: root
    group: root
  tags:
    - kube-controller

- name: Copy etcd certificates
  copy:
    src: "{{kube_ca_conf_directory}}/{{item}}"
    dest: "{{kube_conf_dir}}/{{item}}"
    mode: 0640
    owner: root
    group: root
  with_items:
    - "{{etcd_certificates}}"
  tags:
    - kube-controller

- name: Copy Kubernetes certificates
  copy:
    src: "{{kube_ca_conf_directory}}/{{item}}"
    dest: "{{kube_conf_dir}}/{{item}}"
    mode: 0640
    owner: root
    group: root
  with_items:
    - "{{kube_certificates}}"
  tags:
    - kube-controller

- name: Downloading official Kubernetes binaries
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/v{{kube_release}}/bin/linux/amd64/{{item}}
    dest: "{{kube_bin_dir}}"
    mode: 0755
  with_items:
    - "{{kube_controller_binaries}}"
  notify:
    - restart kube-apiserver
    - restart kube-controller-manager
    - restart kube-scheduler
  tags:
    - kube-controller

- name: Copy encryption provider config file
  copy:
    src: "{{kube_config_directory}}/encryption-config.yaml"
    dest: "{{kube_conf_dir}}/encryption-config.yaml"
    mode: 0644
    owner: root
    group: root
  tags:
    - kube-controller

- name: Combine kube_apiserver_settings and kube_apiserver_settings_user (if defined)
  set_fact:
    kube_apiserver_settings: "{{kube_apiserver_settings | combine(kube_apiserver_settings_user|default({})) }}"
  tags:
    - kube-controller

- name: Create systemd unit file for kube-apiserver
  template:
    src: etc/systemd/system/kube-apiserver.service.j2
    dest: /etc/systemd/system/kube-apiserver.service
    owner: root
    group: root
    mode: 0644
  tags:
    - kube-controller
  notify:
    - reload systemd

- name: Enable and start kube-apiserver
  service:
    name: kube-apiserver
    enabled: yes
    state: started
  tags:
    - kube-controller
